name: Append data to list
concurrency: listappend-${{ github.ref }}

on:
  workflow_dispatch:
    inputs:
      file:
        description: "The file in the Lists directory to append to"
        required: true
        default: "scams.txt"
      text:
        description: "The text to append to the end of the list"
        required: true
      user:
        description: "The Discord user to credit for the addition"
        required: true

jobs:
  fileappend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Check file exists
        run: |
          if [ ! -f Lists/${{ github.event.inputs.file }} ]; then
              echo "File not found!"
              exit 1
          fi

      - name: Append to file
        run: |
          echo '${{ github.event.inputs.text }}' >> Lists/${{ github.event.inputs.file }}

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions via Discord user ${{ github.event.inputs.user }}"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: commit
        run: |
          # Stage the file, commit and push
          git add .
          git commit -m "${{ github.event.inputs.user }}: Update ${{ github.event.inputs.file }}"
          git push

  cliptok-build-publish:
    runs-on: ubuntu-latest
    needs: [fileappend]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-iteration2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-iteration2-
      -
        name: Login to Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.multiarch
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/erisa/cliptok:latest
            ghcr.io/erisa/cliptok:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
